'use strict';

const pathUtils = require('path');
const fs = require('fs-extra');

class QAManifestPlugin{
    constructor(options = {}){
        this.options = Object.assign({
            filename: 'qa_manifest',
            pageList: {}
        }, options);

        this.options.pageList = typeof this.options.pageList == 'object'
            ? this.options.pageList
            : require(this.options.pageList)
    }

    apply(compiler){
        compiler.hooks.done.tapAsync('QAManifestPlugin', (compilation, callback) => {
            var filename = pathUtils.resolve(compiler.options.output.path, this.options.filename+'.html');
            var pageList = this.options.pageList;

            var html = '<!DOCTYPE html><html><head></head><body>';

            Object.keys(pageList).forEach((page) => {
                var href = page.replace(/\.twig$/, '').replace(/(?:\/|^)index\.html$/, '');

                html += '<p><a href="/'+href+'" target="_blank">'+pageList[page]+'</a> ('+page.replace(/\.twig$/, '')+')</p>';
            })

            html += '</body></html>';
            fs.outputFileSync(filename, html);
            callback();
        });
    }
}

module.exports = QAManifestPlugin;