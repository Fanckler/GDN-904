'use strict';

const Attributes = require('./attributes');

class FormLabel{
    constructor(form, generator){
        this.form = form;
        this.generator = generator;
    }

    render(){
        if(this.form.vars.label === false){
            return '';
        }

        if(!this.form.vars.compound){
            this.form.vars.label_attr['for'] = this.form.vars.id;
        }

        if(this.form.vars.required){
            this.form.vars.label_attr['class'] = ((this.form.vars.label_attr['class'] ? this.form.vars.label_attr['class'] : '')+' required').trim();
        }

        let label = '';
        if(!this.form.vars.label || this.form.vars.label.length == 0){
            if(this.form.vars.label_format && this.form.vars.label_format != ''){
                label = this.form.vars.label_format
                    .replace('%name%', this.form.vars.name)
                    .replace('%id%', this.form.vars.id)
            }
            else{
                label = this.generator.humanize(this.form.vars.name);
            }
        }
        else{
            label = this.form.vars.label;
        }

        let str = '<label ' + (new Attributes(this.form, this.generator)).render(this.form.vars.label_attr) + '>';

        label = label.replace("'", "\\'");
        if(this.form.vars.translation_domain === false){
            str += label;
        }
        else if(this.form.vars.translation_domain === null){
            str += `{{ '${label}'|trans() }}`
        }
        else{
            str += `{{ '${label}'|trans({}, '${this.form.vars.translation_domain}') }}`
        }
        str += '</label>';

        return str;
    }
}

module.exports = FormLabel;