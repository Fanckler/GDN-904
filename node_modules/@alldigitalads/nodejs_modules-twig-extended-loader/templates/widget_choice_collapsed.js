'use strict';

const WidgetAttributes = require('./widget_attributes');
const WidgetChoiceOptions = require('./widget_choice_options');

class WidgetChoiceCollapsed{
    constructor(form, generator){
        this.form = form;
        this.generator = generator;
    }

    render(){
        let formOptions = this.form.vars;
        if(
            formOptions.required
            && formOptions.placeholder === null
            && !formOptions.placeholder_in_choices
            && !formOptions.multiple
            && (!formOptions.attr.size || formOptions.attr.size <= 1)
        ){
            formOptions.required = false;
        }

        let str = '<select ' + (new WidgetAttributes(this.form, this.generator)).render();
        if(formOptions.multiple){
            str += ' multiple="multiple"'
        }

        str += '>';

        if(formOptions.placeholder !== null){
            str += '<option value=""';
            if(formOptions.required && (!formOptions.value || formOptions.value.length == 0)){
                str += ' selected="selected"';
            }
            str += '>';
            if(formOptions.placeholder != ''){
                if(formOptions.translation_domain === false){
                    str += formOptions.placeholder;
                }
                else if(formOptions.translation_domain === null){
                    str += `{{ '${formOptions.placeholder}'|trans() }}`;
                }
                else{
                    str += `{{ '${formOptions.placeholder}'|trans({}, '${formOptions.translation_domain}') }}`;
                }
            }
            str += '</option>';
        }

        if(Object.keys(formOptions.preferred_choices).length > 0){
            str += (new WidgetChoiceOptions(this.form, this.generator)).render(formOptions.preferred_choices);
            if(Object.keys(formOptions.choices).length > 0 && formOptions.separator !== null){
                str += `<option disabled="disabled">${formOptions.separator}</option>`;
            }
        }
        str += (new WidgetChoiceOptions(this.form, this.generator)).render(formOptions.choices);
        str += '</select>';
        return str;
    }
}

module.exports = WidgetChoiceCollapsed;