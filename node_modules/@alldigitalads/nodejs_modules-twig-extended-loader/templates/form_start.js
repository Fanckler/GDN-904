'use strict';

class FormStart{
    constructor(form, generator){
        this.form = form;
        this.generator = generator;
    }

    render(){
        this.form.methodRendered = true;

        let method = this.form.vars.method.toUpperCase();
        let formMethod = method;
        if(['POST', 'GET'].indexOf(method) == -1){
            formMethod = 'POST';
        }

        let str = `<form`;
        if(this.form.vars.name != ''){
            str += ` name="${this.form.vars.name}"`;
        }

        str += ` method="${formMethod.toLowerCase()}"`;
        if(this.form.vars.action != ''){
            str += ` action="{{ path('${this.form.vars.action}') }}"`;
        }

        let formAttr = this.form.vars.attr;
        Object.keys(formAttr).forEach((attrname) => {
            if(attrname == '_keys' || attrname == 'action'){
                return;
            }
            let attrvalue = formAttr[attrname];
            str += ` ${attrname}="${attrvalue}"`;
        });

        if(this.form.vars.multipart){
            str += ' enctype="multipart/form-data"'
        }
        str += '>';

        if(formMethod != method){
            str += `<input type="hidden" name="_method" value="${method}" />`;
        }

        return str;
    }
}

module.exports = FormStart;