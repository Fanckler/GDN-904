'use strict';

const Attributes = require('./attributes');

let arrayDiff = (arr1, arr2) => {
    return arr1.filter((i) => {return arr2.indexOf(i) < 0});
};

class WidgetChoiceOptions{
    constructor(form, generator){
        this.form = form;
        this.generator = generator;
    }

    render(options){
        options = options || {};
        let keys = Object.keys(options);
        let choice_translation_domain = this.form.vars.choice_translation_domain;
        let self = this;
        let str = '';
        keys.forEach((group_label) => {
            if(!options.hasOwnProperty(group_label)){
                return;
            }

            let choice = options[group_label];
            let diff = arrayDiff(Object.keys(choice), ['value', 'label', 'data', 'attr']);
            let isIterable = diff.length > 0 ? true : false;

            if(isIterable){
                let label = group_label;
                if(choice_translation_domain === null){
                    label = `{{ '${group_label}'|trans() }}`;
                }
                else if(choice_translation_domain !== false){
                    label = `{{ '${group_label}'|trans({}, '${choice_translation_domain}') }}`;
                }

                str += `<optgroup label="${label}">`;
                str += self.render(choice.choices || choice);
                str += '</optgroup>';
            }
            else{
                str += `<option value="${choice.value}"`;
                if(Object.keys(choice.attr) > 0){
                    str += ' '+(new Attributes(self.form, self.generator)).render(choice.attr);
                }
                if(self.form.vars.value.length > 0 && self.form.vars.value == choice.value){
                    str += ' selected="selected"';
                }
                str += '>';
                if(choice_translation_domain === false){
                    str += choice.label;
                }
                else if(choice_translation_domain === null){
                    str += `{{ '${choice.label}'|trans() }}`
                }
                else{
                    str += `{{ '${choice.label}'|trans({}, '${choice_translation_domain}') }}`
                }
                str += '</option>';
            }
        });
        return str;
    }
}

module.exports = WidgetChoiceOptions;